{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-07-28T13:14:08.354050Z", "invocation_id": "1f1fe556-78d9-498b-a269-d20d6e4bd47e", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:07.861031Z", "completed_at": "2025-07-28T13:14:07.865315Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:07.866077Z", "completed_at": "2025-07-28T13:14:08.003043Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.15709638595581055, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.fato_controlemercadorias", "compiled": true, "compiled_code": "SELECT \n  NULLIF(numero_pedido, '')::VARCHAR(8000) AS operador,\n\n  NULLIF(data_pedido, '')::VARCHAR(8000) AS numero_operacao,\n\n\n  CASE \n    WHEN cliente ~ '^\\d{2}/\\d{2}/\\d{4}$' THEN TO_DATE(cliente, 'DD/MM/YYYY')\n    ELSE NULL\n  END AS data_operacao,\n\n  NULLIF(produto, '')::VARCHAR(8000) AS cedente,\n\n  CASE \n    WHEN REGEXP_REPLACE(quantidade, '[^0-9]', '', 'g') ~ '^\\d+$' THEN \n      CAST(REGEXP_REPLACE(quantidade, '[^0-9]', '', 'g') AS BIGINT)\n    ELSE NULL\n  END AS cpf_sacado,\n\n  NULLIF(status, '')::VARCHAR(8000) AS status,\n\n  CASE \n    WHEN data_entrega ~ '^\\d{2}/\\d{2}/\\d{4}$' THEN TO_DATE(data_entrega, 'DD/MM/YYYY')\n    ELSE NULL\n  END AS data_entrega,\n\n  CASE \n    WHEN observacoes ~ '^\\d{2}/\\d{2}/\\d{4}$' THEN TO_DATE(observacoes, 'DD/MM/YYYY')\n    ELSE NULL\n  END AS data_embarque\n\nFROM \"operacoes\".\"public\".\"f_controle_mercadorias\"", "relation_name": "\"operacoes\".\"public\".\"fato_controlemercadorias\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:07.850333Z", "completed_at": "2025-07-28T13:14:07.876202Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:07.895142Z", "completed_at": "2025-07-28T13:14:08.018111Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.17139744758605957, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.dim_sacados", "compiled": true, "compiled_code": "SELECT \n    id,\n    nome,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj,\n    endereco,\n    cep,\n    cidade,\n    uf,\n    e_mail,\n    telefone,\n    sms,\n    data_cadastro,\n    timestamp_extracao\nFROM \"operacoes\".\"public\".\"d_sacados\"\n\nUNION  -- Remove registros duplicados automaticamente\n\nSELECT \n    id,\n    nome,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj,endereco,\n    cep,\n    cidade,\n    uf,\n    e_mail,\n    telefone,\n    sms,\n    data_cadastro,\n    timestamp_extracao\nFROM \"operacoes\".\"public\".\"d_sacados_fidc\"", "relation_name": "\"operacoes\".\"public\".\"dim_sacados\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:07.863083Z", "completed_at": "2025-07-28T13:14:07.892189Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:07.897400Z", "completed_at": "2025-07-28T13:14:08.017049Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.17083406448364258, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.fato_crm", "compiled": true, "compiled_code": "SELECT\nnome,\n    etapa,\n        comercial,\n            criado_em,\n                data_pre_analise,\n                    data_vnp_visita,\n                        data_visita,\n                            data_assinatura,\n                                comite,\n                                    analise_finalizada,\n                                        doc_obrigatorio_para_analise,\n                                            vencimento_da_etapa,\n                                                timestamp_extracao\nFROM \"operacoes\".\"public\".\"notioncrm\"", "relation_name": "\"operacoes\".\"public\".\"fato_crm\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:07.857426Z", "completed_at": "2025-07-28T13:14:07.865703Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:07.887032Z", "completed_at": "2025-07-28T13:14:08.025972Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.1835486888885498, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.dimcedentesconsolidado", "compiled": true, "compiled_code": "\n\nSELECT\n    dc.nome::VARCHAR(8000) AS nome,\n    CAST(NULLIF(REGEXP_REPLACE(dc.cpf_cnpj, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj,\n    dc.endereco::VARCHAR(8000) AS endereco,\n    dc.cep::VARCHAR(8000) AS cep,\n    dc.cidade::VARCHAR(8000) AS cidade,\n    dc.uf::VARCHAR(2) AS uf,\n    dc.email::VARCHAR(8000) AS email,\n    dc.telefone::VARCHAR(20) AS telefone,\n    dc.gerente::VARCHAR(8000) AS gerente,\n    dc.operador::VARCHAR(8000) AS operador,\n    dc.captador::VARCHAR(8000) AS captador,\n    dc.controlador::VARCHAR(8000) AS controlador,\n    CAST(REPLACE(dc.fator_percentual, ',', '.') AS DECIMAL(10, 5)) AS fator_percentual,\n    CAST(REPLACE(dc.advalorem_percentual, ',', '.') AS DECIMAL(10, 5)) AS advalorem_percentual,\n    TO_DATE(dc.data_cadastro, 'DD-MM-YYYY') AS data_cadastro,\n    dc.fonte_captacao::VARCHAR(8000) AS fonte_captacao,\n    dc.setor::VARCHAR(8000) AS setor,\n    dc.grupo_economico::VARCHAR(8000) AS grupo_economico,\n    \n    -- L\u00f3gica para primeira_operacao\n    CASE\n        WHEN dc.primeira_operacao IS NULL OR TRIM(dc.primeira_operacao) = '' THEN\n            df.primeira_operacao_fidc\n        ELSE\n            TO_DATE(dc.primeira_operacao, 'DD/MM/YYYY')\n    END AS primeira_operacao,\n    \n    -- L\u00f3gica padronizada para limite_global\n    CASE \n        WHEN COALESCE(dc.limite_global_clean, 0) = COALESCE(df.limite_global_fidc, 0) THEN\n            COALESCE(dc.limite_global_clean, 0)\n        ELSE\n            COALESCE(dc.limite_global_clean, 0) + COALESCE(df.limite_global_fidc, 0)\n    END AS limite_global,\n    \n    -- L\u00f3gica padronizada para limite_boleto_especial\n    CASE \n        WHEN COALESCE(dc.limite_boleto_especial_clean, 0) = COALESCE(df.limite_boleto_especial_fidc, 0) THEN\n            COALESCE(dc.limite_boleto_especial_clean, 0)\n        ELSE\n            COALESCE(dc.limite_boleto_especial_clean, 0) + COALESCE(df.limite_boleto_especial_fidc, 0)\n    END AS limite_boleto_especial,\n    \n    -- L\u00f3gica padronizada para limite_comissaria\n    CASE \n        WHEN COALESCE(dc.limite_comissaria_clean, 0) = COALESCE(df.limite_comissaria_fidc, 0) THEN\n            COALESCE(dc.limite_comissaria_clean, 0)\n        ELSE\n            COALESCE(dc.limite_comissaria_clean, 0) + COALESCE(df.limite_comissaria_fidc, 0)\n    END AS limite_comissaria,\n    \n    -- L\u00f3gica padronizada para limite_tranche\n    CASE \n        WHEN COALESCE(dc.limite_tranche_clean, 0) = COALESCE(df.limite_tranche_fidc, 0) THEN\n            COALESCE(dc.limite_tranche_clean, 0)\n        ELSE\n            COALESCE(dc.limite_tranche_clean, 0) + COALESCE(df.limite_tranche_fidc, 0)\n    END AS limite_tranche,\n    \n    -- Campos que n\u00e3o precisam de compara\u00e7\u00e3o (sem equivalente na tabela FIDC)\n    dc.limite_boleto_especial_tranche_clean AS limite_boleto_especial_tranche,\n    dc.limite_boleto_garantido_clean AS limite_boleto_garantido,\n    dc.limite_operacao_clean_clean AS limite_operacao_clean,\n    \n    dc.risco_atual::VARCHAR(8000) AS risco_atual,\n    dc.saldo_clean AS saldo,\n    dc.id_cedente::INT AS id_cedente\n\nFROM (\n    -- Subquery para limpar os dados da tabela principal uma \u00fanica vez\n    SELECT *,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_global, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_global_clean,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_boleto_especial, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_boleto_especial_clean,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_comissaria, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_comissaria_clean,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_tranche, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_tranche_clean,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_boleto_especial_tranche, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_boleto_especial_tranche_clean,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_boleto_garantido, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_boleto_garantido_clean,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_operacao_clean, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_operacao_clean_clean,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(saldo, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS saldo_clean\n    FROM \"operacoes\".\"public\".\"d_cedentes\"\n) dc\n\nLEFT JOIN (\n    -- Subquery para limpar os dados da tabela FIDC uma \u00fanica vez\n    SELECT\n        CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj,\n        CASE\n            WHEN primeira_operacao IS NULL OR TRIM(primeira_operacao) = '' THEN NULL\n            ELSE TO_DATE(primeira_operacao, 'DD-MM-YYYY')\n        END AS primeira_operacao_fidc,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_global, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_global_fidc,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_boleto_especial, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_boleto_especial_fidc,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_comissaria, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_comissaria_fidc,\n        CAST(REPLACE(REPLACE(REGEXP_REPLACE(limite_tranche, '[^0-9,.]', '', 'g'), '.', ''), ',', '.') AS DECIMAL(15, 2)) AS limite_tranche_fidc\n    FROM \"operacoes\".\"public\".\"d_cedentes_fidc\"\n) df ON CAST(NULLIF(REGEXP_REPLACE(dc.cpf_cnpj, '[^0-9]', '', 'g'), '') AS BIGINT) = df.cpf_cnpj", "relation_name": "\"operacoes\".\"public\".\"dimcedentesconsolidado\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:08.009669Z", "completed_at": "2025-07-28T13:14:08.012971Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:08.013288Z", "completed_at": "2025-07-28T13:14:08.191685Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.18466997146606445, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.fato_detalhes_operacoes", "compiled": true, "compiled_code": "SELECT \n    id,\n    operacao_id,\n    tipotitulo,\n    cmc7,\n    numero,\n    documentosacado,\n    numeronota,\n    vencimento,\n    valorface,\n    nomesacado,\n    classerisco,\n    timestamp_extracao,\n    'Sec' AS Empresa\nFROM \"operacoes\".\"public\".\"f_operacoes_detalhes\"\n\nUNION ALL\n\nSELECT \n     id,\n    operacao_id,\n    tipotitulo,\n    cmc7,\n    numero,\n    documentosacado,\n    numeronota,\n    vencimento,\n    valorface,\n    nomesacado,\n    classerisco,\n    timestamp_extracao,\n    'Sec' AS Empresa\nFROM \"operacoes\".\"public\".\"f_operacoes_fidc_detalhes\"", "relation_name": "\"operacoes\".\"public\".\"fato_detalhes_operacoes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:08.026596Z", "completed_at": "2025-07-28T13:14:08.033263Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:08.034598Z", "completed_at": "2025-07-28T13:14:08.204400Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.18162083625793457, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.fato_operacoes", "compiled": true, "compiled_code": "WITH base AS (\n    SELECT\n        'Sec' AS Empresa,\n        cedente::VARCHAR(8000) AS CEDENTE,\n        etapa::VARCHAR(8000) AS ETAPA,\n        CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS CPF_CNPJ_CEDENTE,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(prazo_medio, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS PRAZO_MEDIO,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_bruto, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_BRUTO,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_desagio, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_DESAGIO,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_liquido, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_LIQUIDO,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_recompra_pendencia, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_RECOMPRA_PENDENCIA,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(cred_cedente, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS CRED_CEDENTE,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_pagto_operacao, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_PAGTO_OPERACAO,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_saldo, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_SALDO,\n        operacao::INT AS OPERACAO,\n        TO_DATE(\"data\", 'DD/MM/YYYY') AS DATA,\n        operador::VARCHAR(8000) AS OPERADOR,\n        captador::VARCHAR(8000) AS CAPTADOR,\n        TO_DATE(pagamento_operacao, 'DD/MM/YYYY') AS PAGAMENTO_OPERACAO,\n        TO_DATE(finalizacao, 'DD/MM/YYYY') AS FINALIZACAO,\n        CAST(NULL AS VARCHAR(8000)) AS CONTA_PAGTO,\n        TO_TIMESTAMP(inicio, 'DD/MM/YYYY HH24:MI:SS') AS INICIO\n    FROM \"operacoes\".\"public\".\"f_operacoes\"\n\n    UNION ALL\n\n    SELECT\n        'fidc' AS Empresa,\n        cedente::VARCHAR(8000) AS CEDENTE,\n        etapa::VARCHAR(8000) AS ETAPA,\n        CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS CPF_CNPJ_CEDENTE,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(prazo_medio, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS PRAZO_MEDIO,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_bruto, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_BRUTO,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_receita, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_DESAGIO, -- Using valor_receita for consistency\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_liquido, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_LIQUIDO,\n        CAST(NULL AS DECIMAL(10,2)) AS VALOR_RECOMPRA_PENDENCIA, -- Explicit NULL cast for consistency\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(cred_cedente, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS CRED_CEDENTE,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_pagto_operacao, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_PAGTO_OPERACAO,\n        CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor_saldo, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR_SALDO,\n        operacao::INT AS OPERACAO,\n        TO_DATE(\"data\", 'DD/MM/YYYY') AS DATA,\n        operador::VARCHAR(8000) AS OPERADOR,\n        captador::VARCHAR(8000) AS CAPTADOR,\n        TO_DATE(pagamento_operacao, 'DD/MM/YYYY') AS PAGAMENTO_OPERACAO,\n        TO_DATE(finalizacao, 'DD/MM/YYYY') AS FINALIZACAO,\n        CAST(NULL AS VARCHAR(8000)) AS CONTA_PAGTO,\n        TO_TIMESTAMP(inicio, 'DD/MM/YYYY HH24:MI:SS') AS INICIO\n    FROM \"operacoes\".\"public\".\"f_operacoes_fidc\"\n)\n\nSELECT\n    *,\n    ROW_NUMBER() OVER (ORDER BY DATA, EMPRESA, OPERACAO) AS INDICE_OPERACAO\nFROM base", "relation_name": "\"operacoes\".\"public\".\"fato_operacoes\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:08.044226Z", "completed_at": "2025-07-28T13:14:08.050770Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:08.051179Z", "completed_at": "2025-07-28T13:14:08.213343Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.17247438430786133, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.fato_quitadosfraude", "compiled": true, "compiled_code": "SELECT id_titulo,\n       vencimento,\n       CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR,\n       TO_DATE(data_quitacao, 'DD/MM/YYYY') AS data_quitacao,\n       sacado, \n       cpf_cnpj_sacado,\n       cedente,\n       cpf_cnpj_cedente,\n       setor,\n       banco_cobrador,\n       agencia_cobradora,\n       praca_pagamento,\n       localidade_sacado,\n       criticas,\n       timestamp_extracao,\n       'Sec' AS Empresa\nFROM \"operacoes\".\"public\".\"f_titulosquitadosfraude\"\n\nUNION ALL\n\nSELECT id_titulo,\n       vencimento,\n       CAST(NULLIF(REGEXP_REPLACE(REGEXP_REPLACE(valor, '[^0-9,]', '', 'g'), ',', '.', 'g'), '') AS DECIMAL(10,2)) AS VALOR,\n       TO_DATE(data_quitacao, 'DD/MM/YYYY') AS data_quitacao,\n       sacado,\n       cpf_cnpj_sacado,\n       cedente,\n       cpf_cnpj_cedente,\n       setor,\n       banco_cobrador,\n       agencia_cobradora,\n       praca_pagamento,\n       localidade_sacado,\n       criticas,\n       timestamp_extracao,\n       'Fidc' AS Empresa\nFROM \"operacoes\".\"public\".\"f_titulosquitadosfraude_fidc\"", "relation_name": "\"operacoes\".\"public\".\"fato_quitadosfraude\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:08.029221Z", "completed_at": "2025-07-28T13:14:08.033539Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:08.037019Z", "completed_at": "2025-07-28T13:14:08.214311Z"}], "thread_id": "Thread-4 (worker)", "execution_time": 0.190809965133667, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.fato_quitados", "compiled": true, "compiled_code": "SELECT\n    'sec' AS Empresa, -- Adicionando a coluna Empresa com o valor 'fidc'\n    numero::VARCHAR(8000) AS numero,\n    m::VARCHAR(8000) AS m,\n    classe_risco::VARCHAR(8000) AS classe_risco,\n    tipo::VARCHAR(8000) AS tipo,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_sacado, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_sacado,\n    sacado::VARCHAR(8000) AS sacado,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_cedente,\n    cedente::VARCHAR(8000) AS cedente,\n    nosso_numero::VARCHAR(8000) AS nosso_numero,\n    TO_DATE(original, 'DD/MM/YYYY') AS original, --conversao para data correta\n    TO_DATE(vencimento, 'DD/MM/YYYY') AS vencimento, --conversao para data correta\n    TO_DATE(quitacao, 'DD/MM/YYYY') AS quitacao, --conversao para data correta,\n    status::VARCHAR(8000) AS status,\n    TO_DATE(emissao, 'DD/MM/YYYY') AS emissao,\n    CAST(\n    REPLACE(REGEXP_REPLACE(valor_face_, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_face_,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_juros, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_juros,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_multa, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_multa,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_tarifas, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_tarifas,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_desconto, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_desconto,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_total, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_total,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_liquidado, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_liquidado,\n    NULLIF(op, '')::INT AS op,\n    situacao::VARCHAR(8000) AS situacao,\n    tipo_quitacao::VARCHAR(8000) AS tipo_quitacao,\n    op_de_pagamento::VARCHAR(8000) AS op_de_pagamento,\n    observacao::VARCHAR(8000) AS observacao,\n    conta::VARCHAR(8000) AS conta,\n    CAST(REPLACE(valor_tar_dev_cheque, ',', '.') AS DECIMAL(10, 2)) AS valor_tar_dev_cheque,\n    CAST(REPLACE(valor_tar_recompra, ',', '.') AS DECIMAL(10, 2)) AS valor_tar_recompra,\n    categoria::VARCHAR(8000) AS categoria,\n    banco_cobrador::VARCHAR(8000) AS banco_cobrador,\n    agencia_cobradora::VARCHAR(8000) AS agencia_cobradora,\n    motivo_devolucao::VARCHAR(8000) AS motivo_devolucao\nFROM \"operacoes\".\"public\".\"f_titulosquitados\"\n\n\nUNION ALL\n\n\nSELECT\n    'fidc' AS Empresa,\n    numero::VARCHAR(8000) AS numero,\n    m::VARCHAR(8000) AS m,\n    classe_risco::VARCHAR(8000) AS classe_risco,\n    tipo::VARCHAR(8000) AS tipo,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_sacado, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_sacado,\n    sacado::VARCHAR(8000) AS sacado,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_cedente,\n    cedente::VARCHAR(8000) AS cedente,\n    nosso_numero::VARCHAR(8000) AS nosso_numero,\n    TO_DATE(original, 'DD/MM/YYYY') AS original, --conversao para data correta\n    TO_DATE(vencimento, 'DD/MM/YYYY') AS vencimento, --conversao para data correta\n    TO_DATE(quitacao, 'DD/MM/YYYY') AS quitacao, --conversao para data correta,\n    status::VARCHAR(8000) AS status,\n    TO_DATE(emissao, 'DD/MM/YYYY') AS emissao,\n    CAST(\n    REPLACE(REGEXP_REPLACE(valor_face_, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_face_,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_juros, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_juros,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_multa, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_multa,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_tarifas, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_tarifas,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_desconto, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_desconto,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_total, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_total,\nCAST(\n    REPLACE(REGEXP_REPLACE(valor_liquidado, '[^0-9,]', '', 'g'), ',', '.') \n    AS DECIMAL(10,2)\n) AS valor_liquidado,\n    NULLIF(op, '')::INT AS op,\n    situacao::VARCHAR(8000) AS situacao,\n    tipo_quitacao::VARCHAR(8000) AS tipo_quitacao,\n    op_de_pagamento::VARCHAR(8000) AS op_de_pagamento,\n    observacao::VARCHAR(8000) AS observacao,\n    conta::VARCHAR(8000) AS conta,\n    CAST(REPLACE(valor_tar_dev_cheque, ',', '.') AS DECIMAL(10, 2)) AS valor_tar_dev_cheque,\n    CAST(REPLACE(valor_tar_recompra, ',', '.') AS DECIMAL(10, 2)) AS valor_tar_recompra,\n    categoria::VARCHAR(8000) AS categoria,\n    banco_cobrador::VARCHAR(8000) AS banco_cobrador,\n    agencia_cobradora::VARCHAR(8000) AS agencia_cobradora,\n    motivo_devolucao::VARCHAR(8000) AS motivo_devolucao\nFROM \"operacoes\".\"public\".\"f_titulosquitados_fidc\"", "relation_name": "\"operacoes\".\"public\".\"fato_quitados\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:08.197311Z", "completed_at": "2025-07-28T13:14:08.200254Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:08.200615Z", "completed_at": "2025-07-28T13:14:08.271509Z"}], "thread_id": "Thread-3 (worker)", "execution_time": 0.07826685905456543, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.fato_recompra", "compiled": true, "compiled_code": "\n\nSELECT\n    'Sec' AS Empresa, -- Adicionando a coluna Empresa com o valor 'Sec'\n    numero::VARCHAR(8000) AS numero,\n    m::VARCHAR(8000) AS m,\n    classe_risco::VARCHAR(8000) AS classe_risco,\n    tipo::VARCHAR(8000) AS tipo,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_sacado, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_sacado,\n    sacado::VARCHAR(8000) AS sacado,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_cedente,\n    cedente::VARCHAR(8000) AS cedente,\n    nosso_numero::VARCHAR(8000) AS nosso_numero,\n    TO_DATE(vencimento, 'DD/MM/YYYY') AS vencimento,\n    TO_DATE(recompra, 'DD/MM/YYYY') AS recompra,\n    TO_DATE(emissao, 'DD/MM/YYYY') AS emissao,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_face, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_face,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_juros, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_juros,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_multa, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_multa,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_desconto, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_desconto,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_total, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_total,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_liquidado, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_liquidado,\n    NULLIF(op, '')::INT AS op,\n    situacao::VARCHAR(8000) AS situacao,\n    op_de_pagamento::VARCHAR(8000) AS op_de_pagamento,\n    observacao::VARCHAR(8000) AS observacao,\n    conta::VARCHAR(8000) AS conta,\n    categoria::VARCHAR(8000) AS categoria,\n    motivo::VARCHAR(8000) AS motivo,\n    timestamp_extracao\nFROM \"operacoes\".\"public\".\"f_titulosrecomprados\"\n\nUNION ALL\n\nSELECT\n    'fidc' AS Empresa, -- Adicionando a coluna Empresa com o valor 'fidc'\n    numero::VARCHAR(8000) AS numero,\n    m::VARCHAR(8000) AS m,\n    classe_risco::VARCHAR(8000) AS classe_risco,\n    tipo::VARCHAR(8000) AS tipo,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_sacado, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_sacado,\n    sacado::VARCHAR(8000) AS sacado,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_cedente,\n    cedente::VARCHAR(8000) AS cedente,\n    nosso_numero::VARCHAR(8000) AS nosso_numero,\n    TO_DATE(vencimento, 'DD/MM/YYYY') AS vencimento,\n    TO_DATE(recompra, 'DD/MM/YYYY') AS recompra,\n    TO_DATE(emissao, 'DD/MM/YYYY') AS emissao,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_face, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_face,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_juros, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_juros,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_multa, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_multa,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_desconto, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_desconto,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_total, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_total,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_liquidado, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_liquidado,\n    NULLIF(op, '')::INT AS op,\n    situacao::VARCHAR(8000) AS situacao,\n    op_de_pagamento::VARCHAR(8000) AS op_de_pagamento,\n    observacao::VARCHAR(8000) AS observacao,\n    conta::VARCHAR(8000) AS conta,\n    categoria::VARCHAR(8000) AS categoria,\n    motivo::VARCHAR(8000) AS motivo,\n    timestamp_extracao\nFROM \"operacoes\".\"public\".\"f_titulosrecomprados_fidc\"", "relation_name": "\"operacoes\".\"public\".\"fato_recompra\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:08.209326Z", "completed_at": "2025-07-28T13:14:08.214590Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:08.215559Z", "completed_at": "2025-07-28T13:14:08.315778Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.10782957077026367, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.fato_titulosabertos", "compiled": true, "compiled_code": "SELECT\n    'Sec' AS Empresa, -- Adicionando a coluna Empresa com o valor 'Sec'\n    cedente::VARCHAR(8000) AS cedente,\n    conf::VARCHAR(8000) AS conf,\n    conta::VARCHAR(8000) AS conta,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_cedente,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_sacado, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_sacado,\n    cr::VARCHAR(8000) AS cr,\n    TO_DATE(data_emissao, 'DD/MM/YYYY') AS data_emissao,\n    documento::VARCHAR(8000) AS documento,\n    etapa::VARCHAR(8000) AS etapa,\n    historico::VARCHAR(8000) AS historico,\n    NULLIF(id_titulo, '')::INT AS id_titulo,\n    NULLIF(id_titulo_original, '')::VARCHAR(8000) AS id_titulo_original,\n    m::VARCHAR(8000) AS m,\n    motivo::VARCHAR(8000) AS motivo,\n    TO_DATE(vencimento, 'DD/MM/YYYY') AS vencimento,\n    nosso_numero::VARCHAR(8000) AS nosso_numero,\n    NULLIF(op,'')::INT AS op,\n    original::VARCHAR(8000) AS original,\n    sacado::VARCHAR(8000) AS sacado,\n    situacao::VARCHAR(8000) AS situacao,\n    tipo::VARCHAR(8000) AS tipo,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_juros, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_juros,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_multa, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_multa,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_tarifas, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_tarifas,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_total, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_total,\n    CAST(\n        NULLIF(REPLACE(REGEXP_REPLACE(desagio, '[^0-9,]', '', 'g'), ',', '.'), '')\n        AS DECIMAL(10,2)\n    ) AS desagio\nFROM \"operacoes\".\"public\".\"f_titulosemaberto\"\n\nUNION ALL\n\nSELECT\n    'fidc' AS Empresa, -- Adicionando a coluna Empresa com o valor 'fidc'\n    cedente::VARCHAR(8000) AS cedente,\n    conf::VARCHAR(8000) AS conf,\n    conta::VARCHAR(8000) AS conta,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_cedente,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_sacado, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_sacado,\n    cr::VARCHAR(8000) AS cr,\n    TO_DATE(data_emissao, 'DD/MM/YYYY') AS data_emissao,\n    documento::VARCHAR(8000) AS documento,\n    etapa::VARCHAR(8000) AS etapa,\n    historico::VARCHAR(8000) AS historico,\n    NULLIF(id_titulo, '')::INT AS id_titulo,\n    NULLIF(id_titulo_original, '')::VARCHAR(8000) AS id_titulo_original,\n    m::VARCHAR(8000) AS m,\n    motivo::VARCHAR(8000) AS motivo,\n    TO_DATE(vencimento, 'DD/MM/YYYY') AS vencimento,\n    nosso_numero::VARCHAR(8000) AS nosso_numero,\n    NULLIF(op,'')::INT AS op,\n    original::VARCHAR(8000) AS original,\n    sacado::VARCHAR(8000) AS sacado,\n    situacao::VARCHAR(8000) AS situacao,\n    tipo::VARCHAR(8000) AS tipo,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_juros, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_juros,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_multa, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_multa,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_tarifas, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_tarifas,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_total, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_total,\n    CAST(\n        NULLIF(REPLACE(REGEXP_REPLACE(desagio, '[^0-9,]', '', 'g'), ',', '.'), '')\n        AS DECIMAL(10,2)\n    ) AS desagio\nFROM \"operacoes\".\"public\".\"f_titulosemaberto_fidc\"", "relation_name": "\"operacoes\".\"public\".\"fato_titulosabertos\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-07-28T13:14:08.225923Z", "completed_at": "2025-07-28T13:14:08.228455Z"}, {"name": "execute", "started_at": "2025-07-28T13:14:08.228737Z", "completed_at": "2025-07-28T13:14:08.331462Z"}], "thread_id": "Thread-2 (worker)", "execution_time": 0.10687041282653809, "adapter_response": {"_message": "CREATE VIEW", "code": "CREATE VIEW", "rows_affected": -1}, "message": "CREATE VIEW", "failures": null, "unique_id": "model.my_dbt_project.fato_titulosprorrogados", "compiled": true, "compiled_code": "SELECT\n    'Sec' AS Empresa, -- Adicionando a coluna Empresa com o valor 'Sec'\n    numero::VARCHAR(8000) AS numero,\n    m::VARCHAR(8000) AS m,\n    tipo::VARCHAR(8000) AS tipo,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_sacado, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_sacado,\n    sacado::VARCHAR(8000) AS sacado,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_cedente,\n    cedente::VARCHAR(8000) AS cedente,\n    TO_DATE(vencimento, 'DD/MM/YYYY') AS vencimento,\n    TO_DATE(emissao, 'DD/MM/YYYY') AS emissao,\n    conta::VARCHAR(8000) AS conta,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_face, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_face,\n    TO_DATE(vencimento_anterior, 'DD/MM/YYYY') AS vencimento_anterior,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_face_anterior, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_face_anterior,\n    CAST(\n        REPLACE(REGEXP_REPLACE(tarifas, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS tarifas,\n    CAST(\n        REPLACE(REGEXP_REPLACE(juros, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS juros,\n    CAST(\n        REPLACE(REGEXP_REPLACE(multa, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS multa,\n    CAST(\n        REPLACE(REGEXP_REPLACE(iof, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS iof,\n    timestamp_extracao\nFROM \"operacoes\".\"public\".\"f_titulosprorrogados\"\n\nUNION ALL\n\nSELECT\n    'fidc' AS Empresa, -- Adicionando a coluna Empresa com o valor 'fidc'\n    numero::VARCHAR(8000) AS numero,\n    m::VARCHAR(8000) AS m,\n    tipo::VARCHAR(8000) AS tipo,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_sacado, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_sacado,\n    sacado::VARCHAR(8000) AS sacado,\n    CAST(NULLIF(REGEXP_REPLACE(cpf_cnpj_cedente, '[^0-9]', '', 'g'), '') AS BIGINT) AS cpf_cnpj_cedente,\n    cedente::VARCHAR(8000) AS cedente,\n    TO_DATE(vencimento, 'DD/MM/YYYY') AS vencimento,\n    TO_DATE(emissao, 'DD/MM/YYYY') AS emissao,\n    conta::VARCHAR(8000) AS conta,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_face, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_face,\n    TO_DATE(vencimento_anterior, 'DD/MM/YYYY') AS vencimento_anterior,\n    CAST(\n        REPLACE(REGEXP_REPLACE(valor_face_anterior, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS valor_face_anterior,\n    CAST(\n        REPLACE(REGEXP_REPLACE(tarifas, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS tarifas,\n    CAST(\n        REPLACE(REGEXP_REPLACE(juros, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS juros,\n    CAST(\n        REPLACE(REGEXP_REPLACE(multa, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS multa,\n    CAST(\n        REPLACE(REGEXP_REPLACE(iof, '[^0-9,]', '', 'g'), ',', '.')\n        AS DECIMAL(10,2)\n    ) AS iof,\n    timestamp_extracao\nFROM \"operacoes\".\"public\".\"f_titulosprorrogados_fidc\"", "relation_name": "\"operacoes\".\"public\".\"fato_titulosprorrogados\"", "batch_results": null}], "elapsed_time": 0.6110591888427734, "args": {"macro_debugging": false, "log_path": "/home/dadosdmxcapital/DBT/logs", "exclude": [], "log_level": "info", "empty": false, "partial_parse_file_diff": true, "require_yaml_configuration_for_mf_time_spines": false, "introspect": true, "project_dir": "/home/dadosdmxcapital/DBT", "use_colors": true, "log_format": "default", "which": "run", "version_check": true, "show_resource_report": false, "vars": {}, "send_anonymous_usage_stats": true, "printer_width": 80, "log_format_file": "debug", "skip_nodes_if_on_run_start_fails": false, "write_json": true, "require_resource_names_without_spaces": false, "print": true, "require_explicit_package_overrides_for_builtin_materializations": true, "state_modified_compare_more_unrendered_values": false, "defer": false, "quiet": false, "partial_parse": true, "source_freshness_run_project_hooks": false, "use_colors_file": true, "require_nested_cumulative_type_params": false, "require_batched_execution_for_custom_microbatch_strategy": false, "profiles_dir": "/home/dadosdmxcapital/DBT", "warn_error_options": {"include": [], "exclude": []}, "invocation_command": "dbt run", "strict_mode": false, "populate_cache": true, "favor_state": false, "indirect_selection": "eager", "log_file_max_bytes": 10485760, "select": [], "state_modified_compare_vars": false, "log_level_file": "debug", "cache_selected_only": false, "static_parser": true}}